#pragma once

// define custom "keywords" as macros to highlight them in Eclipse CDT (assuming one has set the
// same highlighting for macros and keywords)
#cmakedefine OZ_ECLIPSE_HIGHLIGHTING

// enable new and delete to save stack traces to show memory leaks
#cmakedefine OZ_TRACE_LEAKS

// enable Pool allocator; otherwise just call Alloc::alloc/dealloc
#cmakedefine OZ_POOL_ALLOC

// whether math library has sincosf function
#cmakedefine OZ_HAVE_SINCOSF

// use big-endian for stream
#cmakedefine OZ_BIG_ENDIAN_STREAM

// we are compiling with MinGW for Windows platform
#cmakedefine OZ_MINGW

#if defined( __clang__ )
# error gcc >= 4.5 is the only supported compiler
#elif defined( __GNUC__ )
# if __GNUC__ < 4 || ( __GNUC__ == 4 && __GNUC_MINOR__ < 5 )
#  error gcc >= 4.5 is the only supported compiler
# elif __GNUC__ == 4 && __GNUC_MINOR__ == 5
#  define nullptr __null
#  define noexcept throw()
# endif
#else
# error gcc >= 4.5 is the only supported compiler
#endif

#ifdef OZ_ECLIPSE_HIGHLIGHTING
# define nil     nil
# define byte    byte
# define ubyte   ubyte
# define ushort  ushort
# define uint    uint
# define ulong   ulong
# define long64  long64
# define ulong64 ulong64
#endif

// machine endian
#ifdef __BIG_ENDIAN__
# define OZ_BIG_ENDIAN_ARCH
#endif

// long and pointer sizes
#ifndef __LP64__
# define OZ_LONG_32
#endif

#if !defined( __LP64__ ) && !defined( __LLP64__ )
# define OZ_POINTER_32
#endif

#define OZ_ALWAYS_INLINE __attribute__(( always_inline ))
#define OZ_WEAK_SYMBOL   __attribute__(( weak ))
#define OZ_THREAD_LOCAL  __thread
