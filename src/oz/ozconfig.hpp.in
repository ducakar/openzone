/*
 * OpenZone - Simple Cross-Platform FPS/RTS Game Engine
 * Copyright (C) 2002-2011  Davorin Učakar
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Davorin Učakar
 * <davorin.ucakar@gmail.com>
 */

#pragma once

// enable new and delete to save stack traces to show memory leaks
#cmakedefine OZ_TRACE_LEAKS

// enable Pool allocator; otherwise just call new char[]/delete[]
#cmakedefine OZ_POOL_ALLOC

// whether math library has sincosf function
#cmakedefine OZ_HAVE_SINCOSF

// enable SIMD code for vector math
#cmakedefine OZ_SIMD

// use big-endian for stream
#cmakedefine OZ_BIG_ENDIAN_STREAM

// we are compiling with MinGW for Windows platform
#cmakedefine OZ_MINGW

#if defined( __clang__ )
# if __clang_major__ < 3
#  error Only LLVM/Clang >= 3.0 is supported.
# endif
#elif defined( __GNUC__ )
# if __GNUC__ < 4 || ( __GNUC__ == 4 && __GNUC_MINOR__ < 6 )
#  error Only GCC >= 4.6 is supported.
# endif
#else
# error GCC >= 4.6 and LLVM/Clang >= 3.0 are the only supported compilers.
#endif

#if !defined( __LP64__ ) && !defined( __LLP64__ )
# define OZ_POINTER_32
#endif

#if !defined( __LP64__ )
# define OZ_LONG_32
#endif

#if defined( __BIG_ENDIAN__ )
# define OZ_BIG_ENDIAN_ARCH
#endif

#define OZ_ALWAYS_INLINE __attribute__(( always_inline ))
#define OZ_WEAK_SYMBOL   __attribute__(( weak ))
#define OZ_THREAD_LOCAL  __thread
#define OZ_PRINTF_FORMAT( stringArg, firstArg ) \
  __attribute__(( format( printf, stringArg, firstArg ) ))
