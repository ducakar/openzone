#pragma once

// enable overloaded new and delete to count allocated memory
#cmakedefine OZ_ALLOC_STATISTICS

// enable PoolAlloc allocator; otherwise use a dummy class that calls malloc/free
#cmakedefine OZ_POOL_ALLOC

// enable GNU math built-ins if we use GCC
#ifdef __GNUC__
#cmakedefine OZ_GNU_MATH
#endif

// whether math library has sincosf function
#cmakedefine OZ_HAVE_SINCOSF

// use big-endian for data
#cmakedefine OZ_BIG_ENDIAN_DATA

// enable warnings about missing and unused variables in config files
#cmakedefine OZ_VERBOSE_CONFIG

// enable XML configuration files support
#cmakedefine OZ_XML_CONFIG

// platform
#cmakedefine OZ_MINGW
#cmakedefine OZ_MSVC
#cmakedefine OZ_WINDOWS

// machine endian
#if defined( __BIG_ENDIAN__ )
# define OZ_BIG_ENDIAN_ARCH
#endif

#ifdef __GNUC__
# if __GNUC__ < 4 || ( __GNUC__ == 4 && __GNUC_MINOR__ < 5 )
#  error Too old GCC, at least 4.5 is required
# endif
# if __GNUC__ == 4 && __GNUC_MINOR__ <= 5
#  define nullptr __null
# endif
#endif

#ifdef OZ_MSVC
# if _MSC_VER < 1600
#  error Too old MSVC, at least 16.00 (Visual C++ 2010) required
# endif
# define _CRT_SECURE_NO_WARNINGS 1
# define __PRETTY_FUNCTION__ ""
# define snprintf sprintf_s
# define chdir _chdir
# define mkdir _mkdir
#endif

#ifndef __LP64__
# define OZ_LONG_32
#endif

#if !defined( __LP64__ ) && !defined( __LLP64__ ) && !defined( _WIN64 )
# define OZ_POINTER_32
#endif
