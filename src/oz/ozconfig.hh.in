/*
 * liboz - OpenZone core library.
 *
 * Copyright © 2002-2012 Davorin Učakar
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#pragma once

/*
 * Configuration variables
 */

// Make new and delete operators save stack traces to track memory leaks.
#cmakedefine OZ_TRACK_LEAKS

/*
 * Compiler and platform-specific macros
 */

#if defined( __clang__ )
# if __clang_major__ < 3
#  error Only LLVM/Clang >= 3.0 is supported.
# endif
#elif defined( __GNUC__ )
# if __GNUC__ < 4 || ( __GNUC__ == 4 && __GNUC_MINOR__ < 6 )
#  error Only GCC >= 4.6 is supported.
# endif
#else
# error GCC >= 4.6 and LLVM/Clang >= 3.0 are the only supported compilers.
#endif

#if !defined( __LP64__ ) && !defined( __LLP64__ ) && !defined( _WIN64 )
# define OZ_POINTER_32
#endif

#if !defined( __LP64__ )
# define OZ_LONG_32
#endif

#if defined( __BIG_ENDIAN__ )
# define OZ_BIG_ENDIAN_ARCH
#endif

#define OZ_THREAD_LOCAL  __thread
#define OZ_ALWAYS_INLINE __attribute__(( always_inline ))
#define OZ_PRINTF_FORMAT( stringArg, firstArg ) \
  __attribute__(( format( printf, stringArg, firstArg ) ))
