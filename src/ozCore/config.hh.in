/*
 * ozCore - OpenZone Core Library.
 *
 * Copyright © 2002-2014 Davorin Učakar
 *
 * This software is provided 'as-is', without any express or implied warranty.
 * In no event will the authors be held liable for any damages arising from
 * the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software in
 *    a product, an acknowledgement in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 */

#pragma once

/*
 * Configuration variables
 */

// Enable memory allocation statistics and tracking of allocated memory chunks. Stack trace for
// every memory allocation performed via new operator is saved for later diagnostics. It detects
// new/delete mismatches and one can check for currently allocated memory chunks (and hence memory
// leaks). Upon freeing a memory chunk is rewritten with 0xee bytes make accesses to freed memory
// likely result in an error.
#cmakedefine OZ_ALLOCATOR

// Enable SIMD-specific implementation of linear algebra classes. However, due to larger size and if
// code is not written with SIMD in mind, it may yield worse performance.
#cmakedefine OZ_SIMD

/*
 * Compiler and platform-specific macros
 */

#if defined(__clang__)
# define OZ_CLANG (__clang_major__ * 100 + __clang_minor__)
# if OZ_CLANG < 303
#  error GCC >= 4.8 and LLVM/Clang >= 3.3 are the only supported compilers.
# endif
#elif defined(__GNUC__)
# define OZ_GCC (__GNUC__ * 100 + __GNUC_MINOR__)
# if OZ_GCC < 408
#  error GCC >= 4.8 and LLVM/Clang >= 3.3 are the only supported compilers.
# endif
#else
# error GCC >= 4.8 and LLVM/Clang >= 3.3 are the only supported compilers.
#endif

#ifdef _WIN32
// At least Windows 2000 required.
# define WINVER 0x0500
// At least Visual Studio 2005 run-time libraries required.
# define __MSVCRT_VERSION__ 0x0800
// At least Internet Explorer 4.0 libraries required.
# define _WIN32_IE 0x0400
// Don't import all crap from Windows headers.
# define WIN32_LEAN_AND_MEAN
// Don't define min and max macros as those interfere with `oz::min()` and `oz::max()`.
# define NOMINMAX
#endif
