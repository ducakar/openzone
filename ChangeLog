0.3.0
* oz:
  - more C++11 features
    - move semantics
    - defaulted & deleted functions
    - constexpr for float constants
    - new exception specification
  - better Win32 support, POSIX API replaced with Win32 API where possible
  - System::bell() method
  - String class has more consistent members, parsing functions added
  - new Time class
  - new StackTrace class (split from System class)
  - OutputStream is readable
  - new BufferStream class (OutputStream with dynamic internal storage)
  - new PhysFile class: version of File class for PhysicsFS
  - Vec3, Vec4, Quat don't inherit from each other or Simd class
  - AABB & Bounds moved to liboz from matrix
  - clearmacros.hh header to undefine liboz macros that might conflict other libraries
  - compiled as shared library
  - additional dependencies: libpulse on Linux and PhysFS 2.0
  - fully documented
  - ZLIB licence
* common:
  - new layer, split from matrix
  - Span and Timer classes moved to common from matrix
  - new Lingua class, gettext-like system, but modularised and suitable for data package system
* matrix:
  - object attributes: tell what special abilities an object can have (nigh vision, binoculars,
    satnav, music player)
  - keys: object can have assigned a key value, so it can lock/unlock matching structure entities
  - lava: can be used both in structures and terrain instead of sea
  - sliding damage
  - configurable gravity
  - structure improvements
    - crushing: structures fall into terrain, and crush objects in their way
    - bound objects: objects that are created together with a structure and destroyed with it;
      useful for defence turrets
    - air brushes to tag certain structure areas that should not be filled with water when a
      structure is under sea
    - sea brushes tag areas that have the same content as terrain sea (water or lava), fog colour is
      also matched
    - no more need for hull around BSPs
    - triggers: some entities can be used; upon usage trigger themselves or other entities
    - entities can be locked/unlocked with appropriate key
    - manual doors
    - elevators
    - if an entity moves to a side, it also moves objects that lay on it - like stacks of objects
  - fragment pools: particle replacements; fragments can be configured like object classes, can
    have a graphic model assigned, etc.
  - BSPs, object classes and fragment pools are internally referenced by BSP/ObjectClass/FragPool
    pointer instead by strings
* client:
  - configurable fog colour for both terrain and structure water/lava
  - smooth loading: model loading split to preloading (mapping file to memory) that is run in a new
    thread and upload to graphic card that has to be synchronous with rendering
  - textures have 3 components: diffuse (base colour), masks (per-pixel specular and emission masks)
    and normal map
  - offscreen rendering support
  - postprocessing
  - bloom postprocess effect
  - footstep/swim sounds
  - Sound class
    - sounds are played asynchronously, parallel to rendering
    - asynchronous streaming of tracks
    - support for music in MP3 and AAC formats
    - user-specified directory can be searched for music
* build:
  - prebuilding entirely split from the runtime part of the engine
  - SDL_image replaced by FreeImage, wider range of image formats supported as prebuilding source
  - 16-bit colour components for terrain heightmap
* general:
  - PhysicsFS used for accessing game data, so they can be loaded directly from archives
  - game data can be modularised into packages
  - Lua API redesigned
  - Lua classes share API code - no more code triplication of Lua API implementations
  - ported to SDL 2.0
